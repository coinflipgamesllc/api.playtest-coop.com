{
    "swagger": "2.0",
    "info": {
        "description": "This is the backend for all Playtest Co-op related data",
        "title": "Playtest Co-op API",
        "termsOfService": "https://playtest-coop.com/terms-of-service",
        "contact": {
            "name": "Coin Flip Games",
            "email": "hi@coinflipgames.co"
        },
        "version": "1.0"
    },
    "host": "api.playtest-coop.com",
    "basePath": "/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate a user",
                "parameters": [
                    {
                        "description": "User email/password combo",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "End an authenticated session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.AckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Send a password reset email to the specified email",
                "parameters": [
                    {
                        "description": "User email to request a password reset for",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.AckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create and authenticates a new user",
                "parameters": [
                    {
                        "description": "User name, email, and password",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "description": "The authentication token includes the user's ID as the subject. We extract that and use it to pull the user from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Retrieve the authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controller.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Update authenticated user",
                "parameters": [
                    {
                        "description": "User data to update",
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/app.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ValidationErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controller.UnauthorizedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "List files belonging to the authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ListFilesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Save a record of a file stored in S3",
                "parameters": [
                    {
                        "description": "File data",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.CreateFileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.FileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/:id": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "remove a file by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.AckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/files/sign": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Generate a presigned URL for the client to upload directly to S3",
                "parameters": [
                    {
                        "description": "File data",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.PresignUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.PresignUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/games": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "List games matching the query with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 13,
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Designer McDesignerton",
                        "name": "designer",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 100,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 50,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 2,
                        "name": "playerCount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 30,
                        "name": "playtime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "name,desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Prototype",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "New Game",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ListGamesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Create a new stub game",
                "parameters": [
                    {
                        "description": "Game data",
                        "name": "game",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.CreateGameRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.GameResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/games/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Return a specific game by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.GameResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Update a specific game",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Game data",
                        "name": "game",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/app.UpdateGameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.GameResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users matching the query with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 100,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "New User",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 50,
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "name,desc",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ListUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.RequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.CreateFileRequest": {
            "type": "object",
            "required": [
                "filename",
                "object",
                "role",
                "size"
            ],
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "What a cool image of a game!"
                },
                "filename": {
                    "type": "string",
                    "example": "example-image.png"
                },
                "game": {
                    "type": "integer",
                    "example": 123
                },
                "object": {
                    "type": "string",
                    "example": "asd9fhgaoseucgewio.png"
                },
                "role": {
                    "type": "string",
                    "example": "Image"
                },
                "size": {
                    "type": "integer",
                    "example": 1241231
                }
            }
        },
        "app.CreateGameRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "designers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "overview": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/app.Stats"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "app.FileResponse": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/domain.File"
                }
            }
        },
        "app.GameResponse": {
            "type": "object",
            "properties": {
                "game": {
                    "$ref": "#/definitions/domain.Game"
                }
            }
        },
        "app.ListFilesResponse": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.File"
                    }
                }
            }
        },
        "app.ListGamesResponse": {
            "type": "object",
            "properties": {
                "games": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Game"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "offset": {
                    "type": "integer",
                    "example": 50
                },
                "total": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "app.ListUsersResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 100
                },
                "offset": {
                    "type": "integer",
                    "example": 50
                },
                "total": {
                    "type": "integer",
                    "example": 1000
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.User"
                    }
                }
            }
        },
        "app.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "AVerySecurePassword123!"
                }
            }
        },
        "app.PresignUploadRequest": {
            "type": "object",
            "required": [
                "extension",
                "name"
            ],
            "properties": {
                "extension": {
                    "type": "string",
                    "example": "jpg"
                },
                "name": {
                    "type": "string",
                    "example": "my-awesome-file.jpg"
                }
            }
        },
        "app.PresignUploadResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "https://assets.playtest-coop.com/..."
                }
            }
        },
        "app.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "app.SignupRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "User McUserton"
                },
                "password": {
                    "type": "string",
                    "example": "AVerySecurePassword123!"
                }
            }
        },
        "app.Stats": {
            "type": "object",
            "properties": {
                "estimated_playtime": {
                    "type": "integer",
                    "example": 30
                },
                "max_players": {
                    "type": "integer",
                    "example": 5
                },
                "min_age": {
                    "type": "integer",
                    "example": 8
                },
                "min_players": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "app.UpdateGameRequest": {
            "type": "object",
            "properties": {
                "designers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "overview": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/app.Stats"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tts_mod": {
                    "type": "integer",
                    "example": 12345678
                }
            }
        },
        "app.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "User McUserton"
                },
                "new_password": {
                    "type": "string",
                    "example": "AVerySecurePassword123!"
                },
                "old_password": {
                    "type": "string",
                    "example": "NotASecurePassword"
                },
                "pronouns": {
                    "type": "string",
                    "example": "they/them"
                }
            }
        },
        "app.UserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/domain.User"
                }
            }
        },
        "controller.AckResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controller.RequestErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controller.ServerErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controller.UnauthorizedResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controller.ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "domain.File": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "What a cool image of a game!"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-12-11T15:29:49.321629-08:00"
                },
                "filename": {
                    "type": "string",
                    "example": "example-image.png"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "role": {
                    "type": "string",
                    "example": "Image"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-12-13T15:42:40.578904-08:00"
                },
                "url": {
                    "type": "string",
                    "example": "https://assets.playtest-coop.com/asd9fhgaoseucgewio.png"
                }
            }
        },
        "domain.Game": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-12-11T15:29:49.321629-08:00"
                },
                "designers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.User"
                    }
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.File"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "overview": {
                    "type": "string",
                    "example": "In the Best Game, players take on the role of ..."
                },
                "stats": {
                    "$ref": "#/definitions/game.Stats"
                },
                "status": {
                    "type": "string",
                    "example": "Prototype"
                },
                "title": {
                    "type": "string",
                    "example": "The Best Game"
                },
                "tts_mod": {
                    "type": "integer",
                    "example": 2247242964
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-12-13T15:42:40.578904-08:00"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-12-11T15:29:49.321629-08:00"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "name": {
                    "type": "string",
                    "example": "User McUserton"
                },
                "pronouns": {
                    "type": "string",
                    "example": "they/them"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-12-13T15:42:40.578904-08:00"
                }
            }
        },
        "game.Stats": {
            "type": "object",
            "properties": {
                "estimated_playtime": {
                    "type": "integer",
                    "example": 30
                },
                "max_players": {
                    "type": "integer",
                    "example": 5
                },
                "min_age": {
                    "type": "integer",
                    "example": 8
                },
                "min_players": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    }
}